apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: rhobs-logging-event-collector
  annotations:
    description: "Template for deploying log event collection from HCP Management and Service Clusters"
parameters:
  - name: REGION
    description: region of SC/MC clusters
  - name: SECTOR
    description: sector of SC/MC clusters
    required: true
  - name: IMAGE
    displayName: Image
    value: "quay.io/openshift-logging/eventrouter:6.4.0"
  - name: CPU
    displayName: CPU
    value: "100m"
  - name: MEMORY
    displayName: Memory
    value: "128Mi"
  - name: NAMESPACE
    displayName: Namespace
    value: "openshift-logging"

objects:
  - apiVersion: hive.openshift.io/v1
    kind: SelectorSyncSet
    metadata:
      labels:
        managed.openshift.io/osd: 'true'
      name: rhobs-logs-token-refresher
    spec:
      resourceApplyMode: Sync
      clusterDeploymentSelector:
        matchLabels:
          api.openshift.com/managed: 'true'
        matchExpressions:
          - key: api.openshift.com/fedramp
            operator: NotIn
            values:
              - 'true'
          - key: ext-hypershift.openshift.io/cluster-type
            operator: In
            values:
              - management-cluster
              - service-cluster
          - key: ext-hypershift.openshift.io/cluster-region
            operator: In
            values:
              - ${REGION}
          - key: ext-hypershift.openshift.io/cluster-sector
            operator: In
            values:
              - ${SECTOR}

    resources:
      - kind: ServiceAccount
        apiVersion: v1
        metadata:
          name: eventrouter
          namespace: ${NAMESPACE}
      - kind: ClusterRole
        apiVersion: rbac.authorization.k8s.io/v1
        metadata:
          name: event-reader
        rules:
          - apiGroups: [""]
            resources: ["events"]
            verbs: ["get", "watch", "list"]

      - kind: ClusterRoleBinding
        apiVersion: rbac.authorization.k8s.io/v1
        metadata:
          name: event-reader-binding
        subjects:
          - kind: ServiceAccount
            name: eventrouter
            namespace: ${NAMESPACE}
        roleRef:
          kind: ClusterRole
          name: event-reader

      - kind: ConfigMap
        apiVersion: v1
        metadata:
          name: eventrouter
          namespace: ${NAMESPACE}
        data:
          config.json: |-
            {
              "sink": "stdout"
            }

      - kind: Deployment
        apiVersion: apps/v1
        metadata:
          name: eventrouter
          namespace: ${NAMESPACE}
          labels:
            component: "eventrouter"
            logging-infra: "eventrouter"
            provider: "openshift"
        spec:
          selector:
            matchLabels:
              component: "eventrouter"
              logging-infra: "eventrouter"
              provider: "openshift"
          replicas: 1
          template:
            metadata:
              labels:
                component: "eventrouter"
                logging-infra: "eventrouter"
                provider: "openshift"
              name: eventrouter
            spec:
              serviceAccount: eventrouter
              containers:
                - name: kube-eventrouter
                  image: ${IMAGE}
                  imagePullPolicy: IfNotPresent
                  resources:
                    requests:
                      cpu: ${CPU}
                      memory: ${MEMORY}
                  volumeMounts:
                    - name: config-volume
                      mountPath: /etc/eventrouter
                  securityContext:
                    allowPrivilegeEscalation: false
                    capabilities:
                      drop: ["ALL"]
              securityContext:
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
              volumes:
                - name: config-volume
                  configMap:
                    name: eventrouter

